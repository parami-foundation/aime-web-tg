(self.webpackChunkaime_tma=self.webpackChunkaime_tma||[]).push([[6216],{29482:function(v,F,c){var m=Object.create,n=Object.defineProperty,E=Object.getOwnPropertyDescriptor,f=Object.getOwnPropertyNames,L=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty,O=(t,e,r)=>e in t?n(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,w=(t,e)=>{for(var r in e)n(t,r,{get:e[r],enumerable:!0})},d=(t,e,r,h)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of f(e))!g.call(t,s)&&s!==r&&n(t,s,{get:()=>e[s],enumerable:!(h=E(e,s))||h.enumerable});return t},b=(t,e,r)=>(r=t!=null?m(L(t)):{},d(e||!t||!t.__esModule?n(r,"default",{value:t,enumerable:!0}):r,t)),C=t=>d(n({},"__esModule",{value:!0}),t),a=(t,e,r)=>(O(t,typeof e!="symbol"?e+"":e,r),r),y={};w(y,{default:()=>p}),v.exports=C(y);var _=b(c(67294)),l=c(38045),o=c(71776);const D="https://player.twitch.tv/js/embed/v1.js",T="Twitch",I="twitch-player-";class p extends _.Component{constructor(){super(...arguments),a(this,"callPlayer",l.callPlayer),a(this,"playerID",this.props.config.playerId||`${I}${(0,l.randomString)()}`),a(this,"mute",()=>{this.callPlayer("setMuted",!0)}),a(this,"unmute",()=>{this.callPlayer("setMuted",!1)})}componentDidMount(){this.props.onMount&&this.props.onMount(this)}load(e,r){const{playsinline:h,onError:s,config:N,controls:M}=this.props,i=o.MATCH_URL_TWITCH_CHANNEL.test(e),u=i?e.match(o.MATCH_URL_TWITCH_CHANNEL)[1]:e.match(o.MATCH_URL_TWITCH_VIDEO)[1];if(r){i?this.player.setChannel(u):this.player.setVideo("v"+u);return}(0,l.getSDK)(D,T).then(P=>{this.player=new P.Player(this.playerID,{video:i?"":u,channel:i?u:"",height:"100%",width:"100%",playsinline:h,autoplay:this.props.playing,muted:this.props.muted,controls:i?!0:M,time:(0,l.parseStartTime)(e),...N.options});const{READY:S,PLAYING:A,PAUSE:H,ENDED:R,ONLINE:j,OFFLINE:x,SEEK:U}=P.Player;this.player.addEventListener(S,this.props.onReady),this.player.addEventListener(A,this.props.onPlay),this.player.addEventListener(H,this.props.onPause),this.player.addEventListener(R,this.props.onEnded),this.player.addEventListener(U,this.props.onSeek),this.player.addEventListener(j,this.props.onLoaded),this.player.addEventListener(x,this.props.onLoaded)},s)}play(){this.callPlayer("play")}pause(){this.callPlayer("pause")}stop(){this.callPlayer("pause")}seekTo(e,r=!0){this.callPlayer("seek",e),r||this.pause()}setVolume(e){this.callPlayer("setVolume",e)}getDuration(){return this.callPlayer("getDuration")}getCurrentTime(){return this.callPlayer("getCurrentTime")}getSecondsLoaded(){return null}render(){const e={width:"100%",height:"100%"};return _.default.createElement("div",{style:e,id:this.playerID})}}a(p,"displayName","Twitch"),a(p,"canPlay",o.canPlay.twitch),a(p,"loopOnEnded",!0)}}]);
