(self.webpackChunkaime_tma=self.webpackChunkaime_tma||[]).push([[4439],{60356:function(D,G,P){var E=Object.create,p=Object.defineProperty,A=Object.getOwnPropertyDescriptor,R=Object.getOwnPropertyNames,U=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty,L=(a,e,t)=>e in a?p(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,k=(a,e)=>{for(var t in e)p(a,t,{get:e[t],enumerable:!0})},v=(a,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of R(e))!I.call(a,s)&&s!==t&&p(a,s,{get:()=>e[s],enumerable:!(i=A(e,s))||i.enumerable});return a},M=(a,e,t)=>(t=a!=null?E(U(a)):{},v(e||!a||!a.__esModule?p(t,"default",{value:a,enumerable:!0}):t,a)),N=a=>v(p({},"__esModule",{value:!0}),a),o=(a,e,t)=>(L(a,typeof e!="symbol"?e+"":e,t),t),w={};k(w,{default:()=>m}),D.exports=N(w);var f=M(P(67294)),r=P(38045),C=P(71776);const V="https://www.youtube.com/iframe_api",S="YT",Y="onYouTubeIframeAPIReady",y=/[?&](?:list|channel)=([a-zA-Z0-9_-]+)/,_=/user\/([a-zA-Z0-9_-]+)\/?/,B=/youtube-nocookie\.com/,j="https://www.youtube-nocookie.com";class m extends f.Component{constructor(){super(...arguments),o(this,"callPlayer",r.callPlayer),o(this,"parsePlaylist",e=>{if(e instanceof Array)return{listType:"playlist",playlist:e.map(this.getID).join(",")};if(y.test(e)){const[,t]=e.match(y);return{listType:"playlist",list:t.replace(/^UC/,"UU")}}if(_.test(e)){const[,t]=e.match(_);return{listType:"user_uploads",list:t}}return{}}),o(this,"onStateChange",e=>{const{data:t}=e,{onPlay:i,onPause:s,onBuffer:g,onBufferEnd:b,onEnded:O,onReady:T,loop:u,config:{playerVars:l,onUnstarted:h}}=this.props,{UNSTARTED:d,PLAYING:c,PAUSED:n,BUFFERING:K,ENDED:x,CUED:H}=window[S].PlayerState;if(t===d&&h(),t===c&&(i(),b()),t===n&&s(),t===K&&g(),t===x){const F=!!this.callPlayer("getPlaylist");u&&!F&&(l.start?this.seekTo(l.start):this.play()),O()}t===H&&T()}),o(this,"mute",()=>{this.callPlayer("mute")}),o(this,"unmute",()=>{this.callPlayer("unMute")}),o(this,"ref",e=>{this.container=e})}componentDidMount(){this.props.onMount&&this.props.onMount(this)}getID(e){return!e||e instanceof Array||y.test(e)?null:e.match(C.MATCH_URL_YOUTUBE)[1]}load(e,t){const{playing:i,muted:s,playsinline:g,controls:b,loop:O,config:T,onError:u}=this.props,{playerVars:l,embedOptions:h}=T,d=this.getID(e);if(t){if(y.test(e)||_.test(e)||e instanceof Array){this.player.loadPlaylist(this.parsePlaylist(e));return}this.player.cueVideoById({videoId:d,startSeconds:(0,r.parseStartTime)(e)||l.start,endSeconds:(0,r.parseEndTime)(e)||l.end});return}(0,r.getSDK)(V,S,Y,c=>c.loaded).then(c=>{this.container&&(this.player=new c.Player(this.container,{width:"100%",height:"100%",videoId:d,playerVars:{autoplay:i?1:0,mute:s?1:0,controls:b?1:0,start:(0,r.parseStartTime)(e),end:(0,r.parseEndTime)(e),origin:window.location.origin,playsinline:g?1:0,...this.parsePlaylist(e),...l},events:{onReady:()=>{O&&this.player.setLoop(!0),this.props.onReady()},onPlaybackRateChange:n=>this.props.onPlaybackRateChange(n.data),onPlaybackQualityChange:n=>this.props.onPlaybackQualityChange(n),onStateChange:this.onStateChange,onError:n=>u(n.data)},host:B.test(e)?j:void 0,...h}))},u),h.events&&console.warn("Using `embedOptions.events` will likely break things. Use ReactPlayer\u2019s callback props instead, eg onReady, onPlay, onPause")}play(){this.callPlayer("playVideo")}pause(){this.callPlayer("pauseVideo")}stop(){document.body.contains(this.callPlayer("getIframe"))&&this.callPlayer("stopVideo")}seekTo(e,t=!1){this.callPlayer("seekTo",e),!t&&!this.props.playing&&this.pause()}setVolume(e){this.callPlayer("setVolume",e*100)}setPlaybackRate(e){this.callPlayer("setPlaybackRate",e)}setLoop(e){this.callPlayer("setLoop",e)}getDuration(){return this.callPlayer("getDuration")}getCurrentTime(){return this.callPlayer("getCurrentTime")}getSecondsLoaded(){return this.callPlayer("getVideoLoadedFraction")*this.getDuration()}render(){const{display:e}=this.props,t={width:"100%",height:"100%",display:e};return f.default.createElement("div",{style:t},f.default.createElement("div",{ref:this.ref}))}}o(m,"displayName","YouTube"),o(m,"canPlay",C.canPlay.youtube)}}]);
